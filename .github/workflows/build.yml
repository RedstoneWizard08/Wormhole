name: Build
on: [push]

jobs:
    build-linux-amd64:
        permissions:
            contents: write
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
              with:
                  submodules: recursive

            - name: setup node
              uses: actions/setup-node@v3
              with:
                  node-version: 18

            - name: install Rust nightly
              uses: dtolnay/rust-toolchain@nightly
            
            - name: Fix Rust
              run: rustup update

            - name: Install system dependencies
              run: |
                  sudo apt-get update
                  sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

            - name: Install pnpm
              run: npm i -g pnpm

            - name: Install frontend dependencies
              run: pnpm install

            - uses: benjlevesque/short-sha@v2.1
              id: short-sha
              with:
                  length: 7

            - name: Run conf
              run: ./apps/gui/genconf.sh
            
            - uses: Swatinem/rust-cache@v2

            - name: Build app
              run: |
                  touch .env
                  pnpm run build
              env:
                CURSEFORGE_KEY: ${{ secrets.CURSEFORGE_KEY }}
                MSA_CLIENT_SECRET: ${{ secrets.MSA_CLIENT_SECRET }}
                NEXUS_API_KEY: ${{ secrets.NEXUS_API_KEY }}

            - uses: actions/upload-artifact@v4
              with:
                  name: Linux Binaries (x86_64)
                  path: |
                      target/release/wormhole
                      target/release/wormhole_gui
                      target/release/wormhole_cli
                      target/release/bindings
                      target/release/webui
                      target/release/*.exe

                      target/release/bundle/**/*.tar.gz
                      target/release/bundle/**/*.tar.gz.sig
                      target/release/bundle/**/*.dmg
                      target/release/bundle/**/*.AppImage
                      target/release/bundle/**/*.AppImage.tar.gz
                      target/release/bundle/**/*.AppImage.tar.gz.sig
                      target/release/bundle/**/*.deb
                      target/release/bundle/**/*.rpm
                      target/release/bundle/**/*.msi
                      target/release/bundle/**/*.msi.zip
                      target/release/bundle/**/*.msi.zip.sig
                      target/release/bundle/**/*.nsis.zip
                      target/release/bundle/**/*.nsis.zip.sig

    build-windows-amd64:
        permissions:
            contents: write
        runs-on: windows-latest
        steps:
            - uses: actions/checkout@v4
              with:
                  submodules: recursive

            - name: setup node
              uses: actions/setup-node@v3
              with:
                  node-version: 18

            - name: install Rust nightly
              uses: dtolnay/rust-toolchain@nightly

            - name: Install pnpm
              run: npm i -g pnpm

            - name: Install frontend dependencies
              run: pnpm install

            - uses: benjlevesque/short-sha@v2.1
              id: short-sha
              with:
                  length: 7

            - name: Run conf
              run: .\apps\gui\genconf.ps1
            
            - uses: Swatinem/rust-cache@v2

            - name: Build app
              run: |
                  touch .env
                  pnpm run build
              env:
                CURSEFORGE_KEY: ${{ secrets.CURSEFORGE_KEY }}
                MSA_CLIENT_SECRET: ${{ secrets.MSA_CLIENT_SECRET }}
                NEXUS_API_KEY: ${{ secrets.NEXUS_API_KEY }}

            - uses: actions/upload-artifact@v4
              with:
                  name: Windows Binaries (x86_64)
                  path: |
                      target/release/wormhole
                      target/release/wormhole_gui
                      target/release/wormhole_cli
                      target/release/bindings
                      target/release/webui
                      target/release/*.exe

                      target/release/bundle/**/*.tar.gz
                      target/release/bundle/**/*.tar.gz.sig
                      target/release/bundle/**/*.dmg
                      target/release/bundle/**/*.AppImage
                      target/release/bundle/**/*.AppImage.tar.gz
                      target/release/bundle/**/*.AppImage.tar.gz.sig
                      target/release/bundle/**/*.deb
                      target/release/bundle/**/*.rpm
                      target/release/bundle/**/*.msi
                      target/release/bundle/**/*.msi.zip
                      target/release/bundle/**/*.msi.zip.sig
                      target/release/bundle/**/*.nsis.zip
                      target/release/bundle/**/*.nsis.zip.sig

    build-macos-amd64:
        permissions:
            contents: write
        runs-on: macos-latest
        steps:
            - uses: actions/checkout@v4
              with:
                  submodules: recursive

            - name: setup node
              uses: actions/setup-node@v3
              with:
                  node-version: 18

            - name: install Rust nightly
              uses: dtolnay/rust-toolchain@nightly

            - name: Install pnpm
              run: npm i -g pnpm

            - name: Install frontend dependencies
              run: pnpm install

            - uses: benjlevesque/short-sha@v2.1
              id: short-sha
              with:
                  length: 7

            - name: Run conf
              run: ./apps/gui/genconf.sh
            
            - uses: Swatinem/rust-cache@v2

            - name: Build app
              run: |
                  touch .env
                  pnpm run build
              env:
                CURSEFORGE_KEY: ${{ secrets.CURSEFORGE_KEY }}
                MSA_CLIENT_SECRET: ${{ secrets.MSA_CLIENT_SECRET }}
                NEXUS_API_KEY: ${{ secrets.NEXUS_API_KEY }}

            - uses: actions/upload-artifact@v4
              with:
                  name: MacOS Binaries (x86_64)
                  path: |
                      target/release/wormhole
                      target/release/wormhole_gui
                      target/release/wormhole_cli
                      target/release/bindings
                      target/release/webui
                      target/release/*.exe

                      target/release/bundle/**/*.tar.gz
                      target/release/bundle/**/*.tar.gz.sig
                      target/release/bundle/**/*.dmg
                      target/release/bundle/**/*.AppImage
                      target/release/bundle/**/*.AppImage.tar.gz
                      target/release/bundle/**/*.AppImage.tar.gz.sig
                      target/release/bundle/**/*.deb
                      target/release/bundle/**/*.rpm
                      target/release/bundle/**/*.msi
                      target/release/bundle/**/*.msi.zip
                      target/release/bundle/**/*.msi.zip.sig
                      target/release/bundle/**/*.nsis.zip
                      target/release/bundle/**/*.nsis.zip.sig
