[workspace.package]
version = "2.0.0"
edition = "2021"
license = "MIT"
repository = "https://github.com/RedstoneWizard08/Wormhole"
homepage = "https://github.com/RedstoneWizard08/Wormhole"
authors = ["RedstoneWizard08", "Rexicon226", "cheese3660", "Wormhole Contributors"]

[workspace.dependencies]
tokio = { version = "1.36.0", features = ["full"] }
serde_json = "1.0.114"
serde = { version = "1.0.197", features = ["derive"] }
tauri = { version = "1.6.1", features = ["api-all"] }
zip-extensions = "0.6.2"
keyvalues-parser = "0.2.0"
reqwest = { version = "0.12.2", features = ["json", "stream", "gzip"] }
tokio-util = { version = "0.7.10", features = ["full"] }
tokio-stream = { version = "0.1.15", features = ["tokio-util", "fs", "net", "sync"] }
tauri-build = "1.5.1"
clap = { version = "4.1.8", features = ["derive", "env", "string"] }
rusqlite = { version = "0.31.0", features = ["bundled"] }
rand = "0.8.5"
zip = "0.6.6"
async-trait = "0.1.78"
lazy_static = "1.4.0"
chrono = { version = "0.4.35", features = ["serde"] }
libloading = "0.8.3"
anyhow = { path = "./external/anyhow" }
const_format = "0.2.32"
phf = { version = "0.11.2", features = ["macros"] }
flate2 = "1.0.28"
diesel = { version = "2.1.5", features = ["sqlite", "returning_clauses_for_sqlite_3_35", "r2d2"] }
dirs = "5.0.1"
tracing = { version = "0.1.40", features = ["log", "async-await"] }
tracing-subscriber = { version = "0.3.18", features = ["json", "chrono", "serde"] }
cfg-if = "1.0.0"
rar = { path = "./external/rar" }
tar = "0.4.40"
xz = "0.1.0"
walkdir = "2.5.0"
base64 = "0.22.0"
ferinth = "2.10.0"
furse = "1.5.13"
envcrypt = "0.5.0"
tempfile = "3.10.1"
specta = { version = "1.0.5", features = ["typescript"] }
tauri-specta = { version = "1.0.2", features = ["javascript", "typescript"] }

wormhole-cli = { path = "./apps/cli" }
wormhole-gui = { path = "./apps/gui" }

ckandex = { path = "./external/ckandex/ckandex" }

api = { path = "./crates/api" }
auth = { path = "./crates/auth" }
query = { path = "./crates/query" }
data = { path = "./crates/data" }
whcore = { path = "./crates/core" }
init = { path = "./crates/init" }
install = { path = "./crates/install" }

[workspace]
resolver = "2"

members = [
    "apps/cli",
    "apps/gui",
    "crates/api",
    "crates/query",
    "crates/data",
    "crates/core",
    "crates/init",
    "crates/install",
    "crates/auth",
    "external/anyhow",
    "external/rar",
]
