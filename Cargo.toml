[workspace.package]
version = "2.0.0"
edition = "2021"
license = "MIT"
repository = "https://github.com/RedstoneWizard08/Wormhole"
homepage = "https://github.com/RedstoneWizard08/Wormhole"
authors = ["RedstoneWizard08", "Rexicon226", "cheese3660", "Wormhole Contributors"]

[workspace.dependencies]
tokio = { version = "1.36.0", features = ["full"] }
serde_json = "1.0.114"
serde = { version = "1.0.197", features = ["derive"] }
tauri = { version = "1.6.1", features = ["api-all"] }
zip-extensions = "0.6.2"
keyvalues-parser = "0.2.0"
ckandex = "0.6.3"
reqwest = { version = "0.11.26", features = ["stream", "gzip"] }
tokio-util = { version = "0.7.10", features = ["full"] }
tokio-stream = { version = "0.1.15", features = ["tokio-util", "fs", "net", "sync"] }
tauri-build = "1.5.1"
clap = { version = "4.1.8", features = ["derive", "env", "string"] }
rusqlite = { version = "0.31.0", features = ["bundled"] }
rand = "0.8.5"
zip = "0.6.6"
async-trait = "0.1.78"
lazy_static = "1.4.0"
chrono = { version = "0.4.35", features = ["serde"] }
libloading = "0.8.3"
anyhow = "1.0.81"
wasmtime = "19.0.0"
wasmer = "4.2.6"
wasmer-wasi = { version = "3.1.1", features = ["wasix"] }
wasmer-wasix = "0.18.1"
wasi-common = "19.0.0"
const_format = "0.2.32"
phf = { version = "0.11.2", features = ["macros"] }
flate2 = "1.0.28"
diesel = { version = "2.1.5", features = ["sqlite"] }
dirs = "5.0.1"
tracing = { version = "0.1.40", features = ["log", "async-await"] }
tracing_subscriber = { version = "0.3.18", features = ["json", "chrono", "serde"] }

wormhole-cli = { path = "./apps/cli" }
wormhole-gui = { path = "./apps/gui" }
wormhole-common = { path = "./crates/common" }

api = { path = "./crates/api" }
query = { path = "./crates/query" }
data = { path = "./crates/data" }
whcore = { path = "./crates/core" }
init = { path = "./crates/init" }
install = { path = "./crates/install" }
instance = { path = "./crates/instance" }

[workspace]
resolver = "2"

members = [
    "apps/cli",
    "apps/gui",
    "crates/common",
    "crates/api",
    "crates/example-plugin",
    "crates/query",
    "crates/instance",
    "crates/data",
    "crates/core",
    "crates/init",
    "crates/install",
]
