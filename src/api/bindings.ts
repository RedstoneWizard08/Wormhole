/* eslint-disable */
// This file was generated by [tauri-specta](https://github.com/oscartbeaumont/tauri-specta). Do not edit this file manually.

declare global {
    interface Window {
        __TAURI_INVOKE__<T>(cmd: string, args?: Record<string, unknown>): Promise<T>;
    }
}

// Function avoids 'window not defined' in SSR
const invoke = () => window.__TAURI_INVOKE__;

export function launch(instanceId: number) {
    return invoke()<null>("launch", { instanceId })
}

export function getInstances(gameId: number) {
    return invoke()<Instance[]>("get_instances", { gameId })
}

export function getInstance(instanceId: number) {
    return invoke()<Instance>("get_instance", { instanceId })
}

export function getDistance(modName: string, query: string) {
    return invoke()<BigInt>("get_distance", { modName,query })
}

export function getInstanceMeta(instanceId: number) {
    return invoke()<InstanceMeta>("get_instance_meta", { instanceId })
}

export type Instance = { id: number | null; name: string }
export type InstanceMeta = { id: number | null; instance_id: number; game_id: number; data_dir: string; cache_dir: string; description: string; created: BigInt; updated: BigInt }
